"""create time_entry table

Revision ID: bfd44b2aca0f
Revises: 3ba5ffb4d73f
Create Date: 2025-09-06 22:23:18.664693

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bfd44b2aca0f"
down_revision: Union[str, Sequence[str], None] = "3ba5ffb4d73f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "time_entries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("task_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("note", sa.Text(), nullable=True),
        sa.CheckConstraint(
            "ended_at IS NULL OR ended_at > started_at",
            name=op.f("ck_time_entries_interval"),
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
            name=op.f("fk_time_entries_task_id_tasks"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_time_entries_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_time_entries")),
    )
    op.create_index(
        op.f("ix_time_entries_started_at"),
        "time_entries",
        ["started_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_entries_task_id"),
        "time_entries",
        ["task_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_entries_user_id"),
        "time_entries",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        "uq_time_entries_user_task_running",
        "time_entries",
        ["user_id", "task_id"],
        unique=True,
        postgresql_where=sa.text("ended_at IS NULL"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "uq_time_entries_user_task_running",
        table_name="time_entries",
    )
    op.drop_index(op.f("ix_time_entries_user_id"), table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_task_id"), table_name="time_entries")
    op.drop_index(
        op.f("ix_time_entries_started_at"), table_name="time_entries"
    )
    op.drop_table("time_entries")
    # ### end Alembic commands ###
